-- Color name - RGBA map
local COLOR_MAP = {
	Red    = {1, 0, 0, 1},
	Green  = {0, 1, 0, 1},
	Blue   = {0, 0, 1, 1},
	White  = {1, 1, 1, 1},
	Black  = {0, 0, 0, 1},
	Orange = {1, 0.5, 0, 1},
}

local ALERT   = 33
local WARNING = 48
local INFO    = 84
local STATUS  = 93
-- =============================================================================
-- PART 1: VARIABLES AND SETUP
-- =============================================================================

local window
local enableBandageHealingCheckbox
local enableCollectArrowsCheckbox
local enableCheckWeightCheckbox
local enableSharpshooterCheckbox
local identifyBagCheckbox
local startButton
local statusTitleLabel, statusLabel
local sharpshooterTitleLabel, sharpshooterLabel

local status = 'Not Started'
local enableBandageHealing = true
local enableCollectArrows = true
local enableCheckWeight = true
local enableSharpshooter = true
local startButtonClicked = false
local stopButtonClicked = true
local runScript = false
local startIdentification = false

local healingActive = false
local lastHealTime = 0
local healCooldown = 12500
local playerCoordsPrevious = nil
local playerCoords = nil
local standingTime = 0
local lastMovementTime = 0
local sharpshooterRate = 0
local currentTime = 0


local WeightBuffer = 25
itemsToCollect = {
    0x0F3F -- Arrow
}

local offSetY = 0

function setOffsetY(value)
    offSetY = offSetY + value
    return offSetY
end

local function updateStatus(message, colorName)
	local rgba = COLOR_MAP[colorName] or COLOR_MAP.White
	status = message
	statusLabel:SetText(message)
	statusLabel:SetColor(table.unpack(rgba))
end

-- =============================================================================
-- PART 2: WINDOW AND CONTROLS
-- =============================================================================

UI.DestroyAllWindows()
window = UI.CreateWindow('archerCompanion', "Proximo's Archer Companion v1.0")
window:SetPosition(200, 200)
window:SetSize(250, 250)


window:AddLabel(10, setOffsetY(20), 'Settings'):SetColor(0.2, 0.8, 1, 1)

enableBandageHealingCheckbox = window:AddCheckbox(10, setOffsetY(20), 'Auto Bandage Heal', false)
enableBandageHealingCheckbox:SetChecked(true)

enableCollectArrowsCheckbox = window:AddCheckbox(10, setOffsetY(20), 'Collect Arrows', false)
enableCollectArrowsCheckbox:SetChecked(true)
enableCheckWeightCheckbox = window:AddCheckbox(10, setOffsetY(20), 'Notify Weight', false)
enableCheckWeightCheckbox:SetChecked(true)
enableSharpshooterCheckbox = window:AddCheckbox(10, setOffsetY(20), 'Display Sharpshooter', false)
enableSharpshooterCheckbox:SetChecked(true)
identifyBagCheckbox = window:AddCheckbox(10, setOffsetY(20), 'Identify Bag', false)
identifyBagCheckbox:SetChecked(false)


startButton = window:AddButton(10, setOffsetY(30), 'Start', 140, 30)
stopButton = window:AddButton(10, setOffsetY(0), 'Stop', 140, 30)
stopButton:SetVisible(false)


statusTitleLabel = window:AddLabel(10, setOffsetY(40), 'Status:')
statusTitleLabel:SetColor(1,1,1,1)
statusLabel = window:AddLabel(70, setOffsetY(0), status)
statusLabel:SetColor(1,1,1,1)

sharpshooterTitleLabel = window:AddLabel(10, setOffsetY(20), 'Sharpshooter:')
sharpshooterTitleLabel:SetColor(1,1,1,1)
sharpshooterLabel = window:AddLabel(110, setOffsetY(0), sharpshooterRate..'%%')
sharpshooterLabel:SetColor(1,1,1,1)
-- =============================================================================
-- PART 3: EVENT HANDLERS
-- =============================================================================

startButton:SetOnClick(function()
	startButtonClicked = true
    startButton:SetVisible(false)
    stopButton:SetVisible(true)
    runScript = true
    sharpshooterRate = 0       
    standingTime = 0
    lastMovementTime = 0 
    currentTime = os.time()
    updateStatus('Running..', 'Orange')
end)

stopButton:SetOnClick(function()
	stopButtonClicked = true
    stopButton:SetVisible(false)
    startButton:SetVisible(true)
    runScript = false
    sharpshooterRate = 0       
    standingTime = 0
    lastMovementTime = 0   
    currentTime = os.time()
    updateStatus('Stopped..', 'Red')
    sharpshooterLabel:SetText(sharpshooterRate..'%')
    sharpshooterLabel:SetColor(1, 1, 1, 1)
end)

enableBandageHealingCheckbox:SetOnCheckedChanged(function(c) enableBandageHealing = c end)
enableCollectArrowsCheckbox:SetOnCheckedChanged(function(c) enableCollectArrows = c end)
enableCheckWeightCheckbox:SetOnCheckedChanged(function(c) enableCheckWeight = c end)

enableSharpshooterCheckbox:SetOnCheckedChanged(function(c) 
enableSharpshooter = c 
sharpshooterTitleLabel:SetVisible(c)
sharpshooterLabel:SetVisible(c)
end)
identifyBagCheckbox:SetOnCheckedChanged(
    function(c) startIdentification = true end
)
-- =============================================================================
-- PART 4: SUPPORT FUNCTIONS
-- =============================================================================

local function IsOverweight()
    if Player.DiffWeight <= 0 then
        Messages.Overhead("Overweight!", ALERT, Player.Serial)
        updateStatus('Overweight!', 'Red')
        return true     
     elseif Player.DiffWeight <= WeightBuffer then
        Messages.Overhead("Nearly Overweight", WARNING, Player.Serial)
        updateStatus('Nearly Overweight', 'Orange')
        return true    
    end
    return false
end

local function collectArrows()
	filter = {onground=true, rangemax=2, graphics=itemsToCollect}
	
	list = Items.FindByFilter(filter)
	for index, item in ipairs(list) do
	    updateStatus('Collecting Arrows', 'Blue')
	    Player.PickUp(item.Serial, 1000)
	    Pause(100)
	    Player.DropInBackpack()
	    Pause(100)
	end
	Pause(150)
end

local function updateSharpshooterLabel(rate)
    if rate >= 1 then
        rate = 1
        sharpshooterLabel:SetColor(0, 1, 0, 1)
    else
        sharpshooterLabel:SetColor(1, 1, 1, 1)
    end
    rate = rate * 100
    rate = math.floor(rate)
    sharpshooterLabel:SetText(rate..'%%')
end

function identifyBag()
    updateStatus('Identfying Bag', 'Blue')
    local items = Items.FindByFilter(
        { 
            name = "Unidentified",
            hues = {0},
            onground=false
        }
    )

    local totalItems = 0
    local wand = Items.FindByType(3570)
    for i, item in ipairs(items) do 
        if item.RootContainer == Player.Serial then
            if item.Name ~= nil then
                totalItems = totalItems + 1
            end
            while item.Name ~= nil and string.find(item.Name,"Unidentified") do
                if wand then 
                Player.UseObject(wand.Serial)
                else
                    Skills.Use('Item Identification')
                end
                Targeting.WaitForTarget(500) 
                Targeting.Target(item.Serial) 
                Pause(1000) 
                if not string.find(item.Name,"Unidentified") then
                    Messages.Overhead(item.Name, 89, Player.Serial)
                end
            end
        end 
    end 

    Messages.Overhead(string.format("Done IDing %d items", totalItems), 64, Player.Serial)
    identifyBagCheckbox:SetChecked(false)
    startIdentification = false
end

Messages.Print("___________________________________", INFO)
Messages.Print("Proximo's Archer Companion v1.0", INFO)
Messages.Print("All Settings are enabled by default", STATUS)
Messages.Print("___________________________________", INFO)

while true do
    
    if runScript then
        updateStatus('Running..', 'Orange')
        playerCoords = Player.X..'-'..Player.Y..'-'..Player.Z
        sharpshooterRate = standingTime/10
        updateSharpshooterLabel(sharpshooterRate)
 
        currentTime = os.time()

        if enableBandageHealing and healingActive and ((currentTime*1000) - lastHealTime >= healCooldown) then
            healingActive = false
        end
        
        if enableBandageHealing and not healingActive then
            if Player.DiffHits > 0 or Player.IsPoisoned then
                if Player.UseObjectByType(3617) then
                    if Targeting.WaitForTarget(5000) then
                        Targeting.TargetSelf()
                        healingActive = true
                        lastHealTime = currentTime * 1000
                    end
                end
            end
        end
        
        if enableCollectArrows then
            collectArrows()
        end

        if enableCheckWeight then
            IsOverweight()
        end

        if enableSharpshooter then
            if playerCoordsPrevious == playerCoords then
                standingTime = currentTime - lastMovementTime
            else
                lastMovementTime = currentTime
                playerCoordsPrevious = playerCoords
            end
        end
    end

    if startIdentification then
        identifyBag()
    end
    
    Pause(50)
   
end

